File: globalSettings.py Summary

**Functions:**

*   **None defined in this file.**
    *   **Note:** This file executes `pygame.init()` and creates font objects using `pygame.font.Font()`, but it does not define any functions using the `def` keyword.

**Variables:**

*   **WHITE:** (tuple) RGB tuple representing the color white (255, 255, 255).
*   **BLACK:** (tuple) RGB tuple representing the color black (0, 0, 0).
*   **GRAY:** (tuple) RGB tuple representing the color gray (128, 128, 128).
*   **LIGHT_GRAY:** (tuple) RGB tuple representing the color light gray (200, 200, 200).
*   **LIGHT_BLUE:** (tuple) RGB tuple representing the color light blue (173, 216, 230).
*   **GREEN:** (tuple) RGB tuple representing the color green (0, 255, 0).
*   **RED:** (tuple) RGB tuple representing the color red (255, 0, 0).
*   **YELLOW:** (tuple) RGB tuple representing the color yellow (255, 255, 0).
*   **BLUE:** (tuple) RGB tuple representing the color blue (0, 0, 255).
*   **DARK_RED:** (tuple) RGB tuple representing the color dark red (150, 0, 0).
*   **RED_COLOR:** (tuple) RGB tuple representing the color red (255, 0, 0). (Duplicate of RED).
*   **PURPLE:** (tuple) RGB tuple representing the color purple (128, 0, 128).
*   **GOLD:** (tuple) RGB tuple representing the color gold (255, 215, 0).
*   **SCREEN_WIDTH:** (int) The width of the game screen in pixels. Initialized to 1200, but then recalculated based on the detected monitor's aspect ratio to maintain a 16:9 ratio.
*   **SCREEN_HEIGHT:** (int) The height of the game screen in pixels. Initialized to 900, but then recalculated based on the detected monitor's aspect ratio to maintain a 16:9 ratio.
*   **SCREEN_SIZE:** (tuple) A tuple containing the final calculated `(SCREEN_WIDTH, SCREEN_HEIGHT)`.
*   **BUTTON_WIDTH:** (int) A default width for buttons (300 pixels). May be overridden by more specific button dimensions.
*   **BUTTON_HEIGHT:** (int) A default height for buttons (70 pixels). May be overridden by more specific button dimensions.
*   **BUTTON_SPACING:** (int) A default spacing value for buttons (130 pixels).
*   **TURN_FONT_SIZE:** (int) Font size intended for turn indicators (50).
*   **FONT_SIZE:** (int) Default font size used in various parts of the game (36).
*   **LARGE_FONT_SIZE:** (int) Font size for larger text elements (72).
*   **currentState:** (any) A global variable intended to hold the current state of the game logic (e.g., 'main_menu', 'battle'). Initialized to `None`.
*   **screen:** (pygame.Surface) A global variable intended to hold the main Pygame display surface. Initialized to `None`.
*   **infoObject:** (pygame.display.Info) An object holding information about the current display capabilities, obtained from `pygame.display.Info()`.
*   **MAX_WIDTH:** (int) The maximum width of the detected display monitor.
*   **MAX_HEIGHT:** (int) The maximum height of the detected display monitor.
*   **MAIN_BUTTON_WIDTH:** (int) Calculated width for buttons specifically on the main menu, based on `SCREEN_WIDTH`.
*   **MAIN_BUTTON_HEIGHT:** (int) Calculated height for buttons specifically on the main menu, based on `SCREEN_HEIGHT`.
*   **NAV_BUTTON_WIDTH:** (int) Calculated width for navigation buttons (like next/back arrows), based on `SCREEN_WIDTH`.
*   **NAV_BUTTON_HEIGHT:** (int) Calculated height for navigation buttons, based on `SCREEN_HEIGHT`.
*   **BUTTON_TEXT_COLOR:** (tuple) The default color for text on buttons, set to the value of `WHITE`.
*   **SAVE_BUTTON_SIZE:** (int) The size (likely width and height) for save slot buttons (100).
*   **SAVE_MENU_BUTTON_WIDTH:** (int) Specific width for buttons within the save menu (300).
*   **SAVE_MENU_BUTTON_HEIGHT:** (int) Specific height for buttons within the save menu (60).
*   **SAVE_MENU_BUTTON_SPACING:** (int) Specific spacing between buttons within the save menu (70).
*   **font:** (pygame.font.Font) A Pygame font object created with the default `FONT_SIZE`.
*   **large_font:** (pygame.font.Font) A Pygame font object created with the `LARGE_FONT_SIZE`.
